/* @autodoc
    @module Enum
    @name enum
    @description Create an enum
    @arg values Either a list containing all keys or a two dimensional list containing keys and their corresponding values
    @returns enum
*/
enum -> values | xs => (separate: values) => (if: (identical: xs[1]), (:enum ++ [values] ++ [(0 .. ((len: values) - 1))]), (:enum ++ xs))

/* @autodoc
    @module Enum
    @name isEnum
    @description Checks if value is part of an Enum
    @arg value Any value
    @arg enum An Enum
    @returns any none 
*/

/* Complex enums */
isEnum -> value enum (head :enum) => (isEnum': (Search: enum[1], value), enum)
isEnum' -> index enum (head :enum) => (Index: enum[2], index)
isEnum' -> index (= :none) enum => :none
